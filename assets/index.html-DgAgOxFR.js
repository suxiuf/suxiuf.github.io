import{_ as i,c as r,a as s,d as n,e as a,b as l,w as o,r as d,o as p}from"./app-rzor12pK.js";const h={};function c(m,e){const t=d("RouteLink");return p(),r("div",null,[e[3]||(e[3]=s('<h2 id="了解ftp" tabindex="-1"><a class="header-anchor" href="#了解ftp"><span>了解FTP</span></a></h2><ul><li>名称：文本传输协议（File Transfer Protocol）FTP，</li><li>是一种允许通过网络传输文本的协议，</li><li>他使用 <strong>client-server</strong> 模型来完成此任务，</li><li>并以非常有效的方式中继命令和数据。</li><li>默认使用<code>21</code>端口通信</li></ul><h3 id="ftp工作原理" tabindex="-1"><a class="header-anchor" href="#ftp工作原理"><span>FTP工作原理</span></a></h3><p>典型的FTP会话，使用两个通道：</p><ul><li>命令 <strong>（</strong> <strong>command</strong> 有时称为控制（control）<strong>）</strong> 通道： 用于传输命令及对这些命令的回复。</li><li>数据 <strong>（data）</strong> 通道： 用于传输数据。</li></ul><p>FTP使用 <strong>client-server</strong> 协议运行，客户端发起连接，服务器验证凭据，然后建立会话。</p><h3 id="主动与被动" tabindex="-1"><a class="header-anchor" href="#主动与被动"><span>主动与被动</span></a></h3><p>FTP服务器可以支持主动连接或被动连接，也可以同时支持两者。</p><ul><li>主动： 连接时，客户端打开一个端口侦听，服务器需要主动连接它</li><li>被动： 连接时，服务器打开一个端口并侦听 （被动地），客户端连接它。</li></ul><blockquote><p>[!NOTE] 注意 FTP 的主动与被动都是对于服务器端来说。</p></blockquote><h3 id="更多信息" tabindex="-1"><a class="header-anchor" href="#更多信息"><span>更多信息</span></a></h3><p>您可以在Internet工程任务组网站上找到有关FTP的技术功能和实现的更多详细信息：<a href="https://www.ietf.org/rfc/rfc959.txt" target="_blank" rel="noopener noreferrer">https：//www.ietf.org/rfc/rfc959.txt</a>。IETF是定义和监管互联网标准的众多标准机构之一。</p><h3 id="回答以下问题" tabindex="-1"><a class="header-anchor" href="#回答以下问题"><span>回答以下问题</span></a></h3><details class="hint-container details"><summary>FTP使用什么通信模式？</summary><p><strong>答案</strong>：<code>client-server</code></p></details><details class="hint-container details"><summary>FTP标准端口是？</summary><p><strong>答案</strong>：<code>21</code></p></details><details class="hint-container details"><summary>FTP有多少种连接方式？</summary><p><strong>答案</strong>：<code>2</code></p></details><h2 id="ftp枚举" tabindex="-1"><a class="header-anchor" href="#ftp枚举"><span>FTP枚举</span></a></h2>',17)),n("p",null,[e[1]||(e[1]=a("枚举的第一步是进行端口扫描，我们已经有足够的经验使用")),l(t,{to:"/notes/penetration/1.tryhackme/5.Network_NMAP.html"},{default:o(()=>e[0]||(e[0]=[a("NMAP")])),_:1}),e[2]||(e[2]=a(" 进行扫描，如果你在使用工具过程中任然遇到困难，你可以使用 “nmap[-h/-help/--help]” 来了解更多关于他的功能和语法。也可以使用“man [nmap]”。"))]),e[4]||(e[4]=s('<h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><p>这是FTP挑战中常见的路径，通过模仿FTP服务器的粗心实现：</p><ul><li>匿名<a href="#%e4%ba%86%e8%a7%a3ftp">FTP</a>登陆</li><li>查看可以访问文件中包含的信息</li><li>尝试建立shell连接。</li></ul><h3 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h3><ul><li>ftp 客户端（大多数客户端如<code>kali</code>、<code>Parrot OS</code>均默认安装）</li><li>如果没有就安装，命令：<code>sudo apt install ftp</code>。</li></ul><h3 id="其他枚举的方法" tabindex="-1"><a class="header-anchor" href="#其他枚举的方法"><span>其他枚举的方法</span></a></h3><p>一些易受攻击的版本的in.ftpd和其他一些FTP服务器变体对存在和不存在的主目录的“cwd”命令返回不同的响应。 这个漏洞可能被利用，因为你可以在认证之前发出<code>cwd</code>命令，如果有主目录，那么很可能会有一个用户帐户。虽然这个漏洞主要存在于遗留系统中，但作为利用FTP的一种方式，它值得了解。 此漏洞记录在：<a href="https://www.exploit-db.com/exploits/20745" target="_blank" rel="noopener noreferrer">https：//www.exploit-db.com/exploits/20745</a></p><h3 id="回答以下问题-1" tabindex="-1"><a class="header-anchor" href="#回答以下问题-1"><span>回答以下问题</span></a></h3><details class="hint-container details"><summary>目标计算机上有多少<strong>个端口</strong>是打开的？</summary><p><strong>答案</strong>：<code>2</code></p></details><details class="hint-container details"><summary>ftp在哪个<strong>端口</strong>上运行？</summary><p><strong>答案</strong>：<code>21</code></p></details><details class="hint-container details"><summary>什么变体的FTP在运行？</summary><p><strong>答案</strong>：<code>vsftpd</code></p></details><details class="hint-container details"><summary>匿名FTP目录中的文件名是什么？</summary><p><strong>答案</strong>：<code>PUBLIC_NOTICE.txt</code></p></details><details class="hint-container details"><summary>我们认为一个可能存在的用户名是？</summary><p><strong>答案</strong>：<code>mike</code></p></details><h2 id="ftp利用" tabindex="-1"><a class="header-anchor" href="#ftp利用"><span>FTP利用</span></a></h2><p>与Telnet类似，使用FTP时，命令和数据通道都未加密，通过这些通道发送的任何数据都可以被拦截和读取。 由于来自FTP的数据是以明文形式发送的，如果发生中间人攻击，攻击者可以泄露通过此协议发送的任何内容（例如密码）。<a href="https://www.jscape.com/blog/bid/91906/Countering-Packet-Sniffers-Using-Encrypted-FTP" target="_blank" rel="noopener noreferrer">JSCape</a>撰写的一篇文章演示并解释了这个过程，它使用<code>ARP-Poisoning</code>来欺骗受害者将敏感信息发送给攻击者。</p><h3 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1"><span>方法</span></a></h3><p>从我们的枚举结果可知道：</p><ul><li>此计算机上正在运行FTP服务</li><li>我们有一个可能的用户名 使用这些信息，让我们尝试暴力<strong>破解</strong><a href="#%e4%ba%86%e8%a7%a3ftp">FTP</a>服务器的密码。</li></ul><h3 id="hydra" tabindex="-1"><a class="header-anchor" href="#hydra"><span>Hydra</span></a></h3><p>Hydra是一个免费的开源密码破解工具。它可以尝试许多密码，直到找到正确的密码。它可以针对50多种协议执行快速字典攻击，包括Telnet、RDP、SSH、FTP、HTTP、HTTPS、SMB、多个数据库等。Hydra已经安装在AttackBox上，但是，如果您在自己的攻击机器上需要它，您可以<a href="https://github.com/vanhauser-thc/thc-hydra" target="_blank" rel="noopener noreferrer">在此处</a>找到GitHub存储库。</p><p>我们将使用以下命令来查找密码：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hydra</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dale</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -P</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/share/wordlists/rockyou.txt</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -vV</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10.10.10.6</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ftp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>让我们对上面的命令分解一下：</p><ul><li><code>hydra</code> : 运行Hydra 工具</li><li><code>-t 4</code> : 每个目标的并行连接数</li><li><code>-l [user]</code> : 指向您试图破解密码的帐户的用户</li><li><code>-P [path to dictionary]</code> 指向包含可能密码列表的文件</li><li><code>-vV</code>： 将详细模式设置为极详细级别，显示每次尝试的登录名与密码组合。</li><li><code>[machine IP]</code>：目标计算机的IP地址</li><li><code>ftp</code>：目标协议</li></ul><h3 id="回答以下问题-2" tabindex="-1"><a class="header-anchor" href="#回答以下问题-2"><span>回答以下问题</span></a></h3><details class="hint-container details"><summary>用户“mike”的密码是什么？</summary><p><strong>答案</strong>：<code>password</code></p></details><details class="hint-container details"><summary>答对了！现在，让我们以该用户的身份使用 <strong>“ftp [IP]”连接到FTP服务器</strong> 并在提示时输入凭据，什么是ftp.txt？</summary><p><strong>答案</strong>：<code>THM{y0u_g0t_th3_ftp_fl4g}</code></p></details><h2 id="知识扩展" tabindex="-1"><a class="header-anchor" href="#知识扩展"><span>知识扩展</span></a></h2><p>这里有一些东西，如果你感兴趣，在完成这个房间后阅读可能会有用：</p><ul><li><a href="https://medium.com/@gregIT/exploiting-simple-network-services-in-ctfs-ec8735be5eef" target="_blank" rel="noopener noreferrer">https://medium.com/@gregIT/exploiting-simple-network-services-in-ctfs-ec8735be5eef</a></li><li><a href="https://attack.mitre.org/techniques/T1210/" target="_blank" rel="noopener noreferrer">https://attack.mitre.org/techniques/T1210/</a></li><li><a href="https://www.nextgov.com/cybersecurity/2019/10/nsa-warns-vulnerabilities-multiple-vpn-services/160456/" target="_blank" rel="noopener noreferrer">https://www.nextgov.com/cybersecurity/2019/10/nsa-warns-vulnerabilities-multiple-vpn-services/160456/</a></li></ul>',30))])}const u=i(h,[["render",c]]),f=JSON.parse('{"path":"/penetration/yy7yr0nv/","title":"常见的网络服务-FTP","lang":"zh-CN","frontmatter":{"title":"常见的网络服务-FTP","createTime":"2024/11/16 19:34:46","permalink":"/penetration/yy7yr0nv/"},"headers":[],"readingTime":{"minutes":4.6,"words":1380},"git":{"updatedTime":1732288003000,"contributors":[{"name":"suxiufeng","username":"suxiufeng","email":"suxiufengcool@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/suxiufeng?v=4","url":"https://github.com/suxiufeng"},{"name":"kali","username":"kali","email":"kali@kali","commits":1,"avatar":"https://avatars.githubusercontent.com/kali?v=4","url":"https://github.com/kali"}]},"filePathRelative":"notes/penetration/1.tryhackme/9.Network_FTP.md"}');export{u as comp,f as data};
