import{_ as n,c as r,a as h,b as p,w as e,r as k,o,d as i,e as l}from"./app-rzor12pK.js";const c="/assets/file-20241116234009-DP4BCNXy.png",g="/assets/file-20241116234024-CzFEV1B8.png",u="/assets/file-20241116234044-CuVdiXIx.png",b="/assets/file-20241116234052-CxZ_WILF.png",m={};function v(f,s){const d=k("Tabs");return o(),r("div",null,[s[4]||(s[4]=h('<h2 id="文本编辑器" tabindex="-1"><a class="header-anchor" href="#文本编辑器"><span>文本编辑器</span></a></h2><h3 id="nano" tabindex="-1"><a class="header-anchor" href="#nano"><span>nano</span></a></h3><p>开始使用Nano很容易！要使用nano创建或编辑文件，我们只需使用<code>nano filename</code> --将“filename”替换为您希望编辑的文件的名称。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nano</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myfile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>进入nano 后会显示以下界面:</p><p><img src="'+c+'" alt=""></p><h3 id="vim" tabindex="-1"><a class="header-anchor" href="#vim"><span>Vim</span></a></h3><p>Vim是一个更高级的文本编辑器。虽然您不需要了解所有高级功能，但提及它对于提高您的Linux技能很有帮助。 Vim的一些好处，尽管需要更长的时间来熟悉，包括：</p><ul><li>可定制：您可以修改键盘快捷键</li><li>高亮：如果您正在编写或维护代码，这很有用，使其成为软件开发人员的热门选择</li><li>有很多资源，如<a href="https://vim.rtorr.com/" target="_blank" rel="noopener noreferrer">备忘录</a>，教程和排序可供您使用。 TryHackMe有一个<a href="https://tryhackme.com/room/toolboxvim" target="_blank" rel="noopener noreferrer">展示Vim的房间，</a>如果你想了解更多关于这个编辑器的信息！</li></ul><h2 id="一般实用工具" tabindex="-1"><a class="header-anchor" href="#一般实用工具"><span>一般实用工具</span></a></h2><h3 id="下载文" tabindex="-1"><a class="header-anchor" href="#下载文"><span>下载文</span></a></h3>',11)),p(d,{id:"45",data:[{id:"wget"},{id:"curl"}]},{title0:e(({value:a,isActive:t})=>s[0]||(s[0]=[l("wget")])),title1:e(({value:a,isActive:t})=>s[1]||(s[1]=[l("curl")])),tab0:e(({value:a,isActive:t})=>s[2]||(s[2]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"wget"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," https://assets.tryhackme.com/additional/linux-fundamentals/part3/myfile.txt")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:t})=>s[3]||(s[3]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"curl"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," http://example.com/file.txt"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," -o"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," file.txt")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),_:1}),s[5]||(s[5]=h('<h3 id="主机间文件传输-scp" tabindex="-1"><a class="header-anchor" href="#主机间文件传输-scp"><span>主机间文件传输（SCP）</span></a></h3><p><code>SCP</code>就是一种安全复制文件的方法。与常规cp命令不同，此命令允许您使用SSH协议在两台计算机之间传输文件，以提供身份验证和加密。 <code>SCP</code>可以在源和目的主机间工作，SCP允许您：</p><ul><li>将文件目录从当前系统复制到远程系统</li><li>将文件目录从远程系统复制到当前系统 前提是我们知道您当前系统上的用户和远程系统上的用户的用户名和密码。例如，让我们将一个示例文件从我们的机器复制到远程机器，需要知道以下参数：</li></ul><table><thead><tr><th><strong>参数</strong></th><th><strong>值</strong></th></tr></thead><tbody><tr><td>远程系统的IP地址</td><td>192.168.1.30</td></tr><tr><td>远程系统上的用户</td><td>ubuntu</td></tr><tr><td>本地系统上的文件名</td><td>important.txt</td></tr><tr><td>我们希望在远程系统上存储文件的名称</td><td>transferred.txt</td></tr><tr><td>有了这些信息，让我们制作我们的<code>scp</code>命令（记住SCP的格式只是源和目的地）：</td><td></td></tr></tbody></table><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">scp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> important.txt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ubuntu@192.168.1.30:/home/ubuntu/transferred.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当然也可以将远程主机的文件 拷贝到本地，我们只需将文件路径顺序倒过来</p></div><h3 id="启用本地web-提供下载连接" tabindex="-1"><a class="header-anchor" href="#启用本地web-提供下载连接"><span>启用本地web,提供下载连接</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python3</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http.server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="进程" tabindex="-1"><a class="header-anchor" href="#进程"><span>进程</span></a></h2><p>进程（Processes）是在您的计算机上运行的程序。它们由内核管理，其中每个进程都有一个与其关联的ID，也称为其PID。PID按进程开始的顺序递增。即，第60个进程的PID为60。</p><h3 id="查看进程" tabindex="-1"><a class="header-anchor" href="#查看进程"><span>查看进程</span></a></h3><h4 id="ps" tabindex="-1"><a class="header-anchor" href="#ps"><span><strong>PS</strong></span></a></h4><p>我们可以使用<code>ps</code>命令来提供一个正在运行的进程列表，内容包括当前用户的会话和一些附加信息，如它的状态码，正在运行的会话，它使用的CPU的使用时间，以及正在执行的实际程序或命令的名称： <img src="'+g+'" alt=""> 请注意，在上面的屏幕截图中，第二个进程ps的PID为204，然后在它下面的命令中，它被递增到205。 要查看其他用户运行的进程以及那些不从会话运行的进程（即系统进程），我们需要为<code>ps</code>命令提供<strong>aux</strong>，如下所示：<code>ps aux</code></p><p><img src="'+u+'" alt=""></p><h4 id="top" tabindex="-1"><a class="header-anchor" href="#top"><span><strong>TOP</strong></span></a></h4><p>另一个非常有用的命令是top命令; top为您提供有关系统上运行的进程的实时统计信息，而不是一次性视图。这些统计信息将每10秒刷新一次，但在您使用箭头键浏览各行时也会刷新。另一个深入了解系统的好命令是通过<code>top</code>命令。</p><p><img src="'+b+'" alt=""></p><h3 id="进程管理" tabindex="-1"><a class="header-anchor" href="#进程管理"><span>进程管理</span></a></h3><h4 id="kill" tabindex="-1"><a class="header-anchor" href="#kill"><span>KILL</span></a></h4><p><code>kill</code> 用来终止进程，并在终止的过程中，向进程发送信号</p><blockquote><ul><li>SIGTERM -终止进程，但允许它事先执行一些清理任务</li><li>SIGKILL -终止进程-不做任何事后清理</li><li>SIGSTOP 停止/挂起进程</li></ul></blockquote><h4 id="命名空间" tabindex="-1"><a class="header-anchor" href="#命名空间"><span><strong>命名空间</strong></span></a></h4><p>操作系统（OS）使用命名空间来最终将计算机上可用的资源划分给（例如CPU、RAM和优先级）进程。 命名空间能够实现进程间的隔离：只有同一命名空间的进行才能互相访问。 PID为 0 , 的进程是在系统引导时启动的进程，例如：systemd,它提供一种在系统和用户之间管理进程的方法。</p><p><strong>启动服务</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [option] </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>[!TIP] 提示</p><ul><li>在启动引导程序时启动服务 : <code>enable</code></li><li>启动服务<code>start</code></li><li>停止服务<code>stop</code></li><li>禁用服务<code>disable</code></li><li>重新启动服务： <code>restart</code></li></ul></blockquote><h4 id="进程的前后台切换" tabindex="-1"><a class="header-anchor" href="#进程的前后台切换"><span>进程的前后台切换</span></a></h4><p>一般运行程序，默认是在前台运行，运行后，当前terminal 会被占用，无法进行其他操作</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello world!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>想要让以上命令在运行后进程，需要在运行的命令后面加 <code>&amp;</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello world!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>也可以通过 <code>Ctrl + z</code> 暂停进程</p></li><li><p><code>fg</code>： 当在当前terminal 暂停了一个进程时，可以用<code>fg</code>重新回到进程运行状态，只能回到最近暂停的一个。</p></li></ul><h2 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务"><span>定时任务</span></a></h2><p><code>Crontabs</code> 是一个在<code>boot</code>启动时启动的进程，负责管理<code>cron</code>作业</p><ul><li><code>crontabs</code> 文件保存在 <code>/var/spool/cron/crontabs</code>文件下</li><li>也可以以命令行的形式，管理<code>cron</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">crontab</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 查看当前用户的定时任务</span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">crontab</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 创建定时任务（默认用nano编辑文本）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>cron</strong> 表达式是一个字符串，该字符串由 <code>6</code> 个空格分为 <code>7</code> 个域，每一个域代表一个时间单位。格式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">秒</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">分</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">时</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">日</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">月</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">周</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">年</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">命令</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>通常定义 “年” 的部分可以省略，实际常用的由 前六部分组成</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">0</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> *</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/12</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> *</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> *</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> *</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -R</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/cmnatic/Documents</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/backups/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设置每次重启都会执行的任务会用到：<code>@reboot</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">@reboot</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/opt/processes.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="cron-中的参数与通配符" tabindex="-1"><a class="header-anchor" href="#cron-中的参数与通配符"><span>cron 中的参数与通配符</span></a></h3><table><thead><tr><th>域</th><th>是否必填</th><th>值以及范围</th><th>通配符</th></tr></thead><tbody><tr><td>秒</td><td>是</td><td>0-59</td><td>, - * /</td></tr><tr><td>分</td><td>是</td><td>0-59</td><td>, - * /</td></tr><tr><td>时</td><td>是</td><td>0-23</td><td>, - * /</td></tr><tr><td>日</td><td>是</td><td>1-31</td><td>, - * ? / L W</td></tr><tr><td>月</td><td>是</td><td>1-12 或 JAN-DEC</td><td>, - * /</td></tr><tr><td>周</td><td>是</td><td>1-7 或 SUN-SAT</td><td>, - * ? / L #</td></tr><tr><td>年</td><td>否</td><td>1970-2099</td><td>, - * /</td></tr></tbody></table><ul><li><p><code>,</code> 多个单值连接（英文逗号），如果我们在 “分” 这个域中定义为 <code>8,12,35</code> ，则表示分别在第 8 分，第 12 分 第 35 分执行该定时任务。</p></li><li><p><code>-</code> 区间连续(几至几)，如果我们在 “时” 这个域中定义 <code>1-6</code>，则表示在 1 到 6 点之间每小时都触发一次，用 <code>,</code> 表示 <code>1,2,3,4,5,6</code>。</p></li><li><p><code>*</code> 表示所有值，可解读为 “每”。如果在“日”这个域中设置 <code>*</code>,表示每一天都会触发。</p></li><li><p><code>?</code> 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的 8 号触发一个操作，但不关心是周几，我们可以这么设置 `0 0 0 8 * ?</p></li><li><p><code>/</code> 在 “秒” 上定义 <code>5/10</code> 表示从 第 5 秒开始 每 10 秒执行一次，而在 “分” 上则表示从 第 5 秒开始 每 10 分钟执行一次。</p></li><li><p><code>L</code> 表示英文中的<strong>LAST</strong> 的意思，只能在 “日”和“周”中使用。在“日”中设置，表示当月的最后一天。在“周”上表示周六，相当于”7”或”SAT”。如果在”L”前加上数字，则表示该数据的最后一个。例如在“周”中设置”7L”这样的格式,则表示“本月最后一个周六”。</p></li><li><p><code>W</code> 表示离指定日期的最近那个工作日(周一至周五)触发，只能在 “日” 中使用且只能用在具体的数字之后。若在“日”上设置”15W”，表示离每月 15 号最近的那个工作日触发。假如 15 号正好是周六，则找最近的周五(14 号)触发, 如果 15 号是周未，则找最近的下周一(16 号)触发.如果 15 号正好在工作日(周一至周五)，则就在该天触发。如果是 “1W” 就只能往本月的下一个最近的工作日推不能跨月往上一个月推。</p></li><li><p><code>#</code> 表示每月的第几个周几，只能作用于 “周” 。例如 ”2#3” 表示在每月的第三个周二。</p></li></ul><h2 id="通过日志维护系统" tabindex="-1"><a class="header-anchor" href="#通过日志维护系统"><span>通过日志维护系统</span></a></h2><ul><li>fail2ban： 一个防火墙，可以用于监视和阻止暴力破解</li><li>ufw：ubuntu系统的防火墙，基于iptables的简化工具防</li><li>access.log ：web服务器的访问日志</li><li>error.log ：web服务器的错误日志</li></ul><h2 id="linux-工具或实用程序练习" tabindex="-1"><a class="header-anchor" href="#linux-工具或实用程序练习"><span>Linux 工具或实用程序练习</span></a></h2><p>在其他一些专门用于Linux工具或实用程序的TryHackMe房间中继续学习：</p><ul><li>Bash脚本-<a href="https://tryhackme.com/room/bashscripting" target="_blank" rel="noopener noreferrer">https://tryhackme.com/room/bashscripting</a></li><li>正则表达式-<a href="https://tryhackme.com/room/catregex" target="_blank" rel="noopener noreferrer">https：//tryhackme.com/room/catregex</a></li></ul>',50))])}const A=n(m,[["render",v]]),x=JSON.parse('{"path":"/penetration/l2ou7dwa/","title":"Linux基础-003","lang":"zh-CN","frontmatter":{"title":"Linux基础-003","createTime":"2024/11/16 19:35:26","permalink":"/penetration/l2ou7dwa/"},"headers":[],"readingTime":{"minutes":7.18,"words":2153},"git":{"updatedTime":1732288003000,"contributors":[{"name":"suxiufeng","username":"suxiufeng","email":"suxiufengcool@163.com","commits":7,"avatar":"https://avatars.githubusercontent.com/suxiufeng?v=4","url":"https://github.com/suxiufeng"},{"name":"suxiuf","username":"suxiuf","email":"suxiufengcool@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/suxiuf?v=4","url":"https://github.com/suxiuf"},{"name":"kali","username":"kali","email":"kali@kali","commits":1,"avatar":"https://avatars.githubusercontent.com/kali?v=4","url":"https://github.com/kali"}]},"filePathRelative":"notes/penetration/1.tryhackme/4.Linux_003.md"}');export{A as comp,x as data};
